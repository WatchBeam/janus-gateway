//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Tool     : bondc, Version=3.0.1, Build=bond-git.retail.not
//     Template : Microsoft.Bond.Rules.dll#Rules_BOND_CPP.tt
//     File     : bond_const_enum.h
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
    

#pragma once


namespace bond
{
namespace _bond_enumerators
{
namespace BondDataType
{

// List of supported data types for fields

enum BondDataType
{
    BT_STOP = 0,
    BT_STOP_BASE = 1,
    BT_BOOL = 2,
    BT_UINT8 = 3,
    BT_UINT16 = 4,
    BT_UINT32 = 5,
    BT_UINT64 = 6,
    BT_FLOAT = 7,
    BT_DOUBLE = 8,
    BT_STRING = 9,
    BT_STRUCT = 10,
    BT_LIST = 11,
    BT_SET = 12,
    BT_MAP = 13,
    BT_INT8 = 14,
    BT_INT16 = 15,
    BT_INT32 = 16,
    BT_INT64 = 17,
    BT_WSTRING = 18,
    BT_UNAVAILABLE = 127,
}; // enum BondDataType

}  // namespace BondDataType
}  // namespace _bond_enumerators

using namespace _bond_enumerators::BondDataType;

namespace _bond_enumerators
{
namespace ProtocolType
{

// Magic numbers of well-known protocol types.

enum ProtocolType
{
    // Actual protocol type is marshaled with payload.
    MARSHALED_PROTOCOL = 0,
    // Formal mafia binary protocol.
    MAFIA_PROTOCOL = 17997,
    // Bond compact protocol.
    COMPACT_PROTOCOL = 16963,
    // JSON text protocol.
    JSON_PROTOCOL = 21322,
    // Pretty JSON protocol.
    PRETTY_JSON_PROTOCOL = 20554,
    // Simple protocol.
    SIMPLE_PROTOCOL = 20563,
}; // enum ProtocolType

}  // namespace ProtocolType
}  // namespace _bond_enumerators

using namespace _bond_enumerators::ProtocolType;


} // namespace bond
