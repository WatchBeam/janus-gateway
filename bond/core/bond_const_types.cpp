//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Tool     : bondc, Version=3.0.1, Build=bond-git.retail.not
//     Template : Microsoft.Bond.Rules.dll#Rules_BOND_CPP.tt
//     File     : bond_const_types.cpp
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#include "bond_const_types.h"
#include "bond_const_reflection.h"
#include <bond/core/exception.h>

namespace bond
{

namespace _bond_enumerators
{
namespace BondDataType
{

const
std::map<std::string, enum BondDataType> _name_to_value_BondDataType = 
    boost::assign::map_list_of<std::string, enum BondDataType>
        ("BT_STOP", _bond_enumerators::BondDataType::BT_STOP)
        ("BT_STOP_BASE", _bond_enumerators::BondDataType::BT_STOP_BASE)
        ("BT_BOOL", _bond_enumerators::BondDataType::BT_BOOL)
        ("BT_UINT8", _bond_enumerators::BondDataType::BT_UINT8)
        ("BT_UINT16", _bond_enumerators::BondDataType::BT_UINT16)
        ("BT_UINT32", _bond_enumerators::BondDataType::BT_UINT32)
        ("BT_UINT64", _bond_enumerators::BondDataType::BT_UINT64)
        ("BT_FLOAT", _bond_enumerators::BondDataType::BT_FLOAT)
        ("BT_DOUBLE", _bond_enumerators::BondDataType::BT_DOUBLE)
        ("BT_STRING", _bond_enumerators::BondDataType::BT_STRING)
        ("BT_STRUCT", _bond_enumerators::BondDataType::BT_STRUCT)
        ("BT_LIST", _bond_enumerators::BondDataType::BT_LIST)
        ("BT_SET", _bond_enumerators::BondDataType::BT_SET)
        ("BT_MAP", _bond_enumerators::BondDataType::BT_MAP)
        ("BT_INT8", _bond_enumerators::BondDataType::BT_INT8)
        ("BT_INT16", _bond_enumerators::BondDataType::BT_INT16)
        ("BT_INT32", _bond_enumerators::BondDataType::BT_INT32)
        ("BT_INT64", _bond_enumerators::BondDataType::BT_INT64)
        ("BT_WSTRING", _bond_enumerators::BondDataType::BT_WSTRING)
        ("BT_UNAVAILABLE", _bond_enumerators::BondDataType::BT_UNAVAILABLE);

const
std::map<enum BondDataType, std::string> _value_to_name_BondDataType = 
    bond::reverse_map(_name_to_value_BondDataType);

} // namespace BondDataType
} // namespace _bond_enumerators>


namespace _bond_enumerators
{
namespace ProtocolType
{

const
std::map<std::string, enum ProtocolType> _name_to_value_ProtocolType = 
    boost::assign::map_list_of<std::string, enum ProtocolType>
        ("MARSHALED_PROTOCOL", _bond_enumerators::ProtocolType::MARSHALED_PROTOCOL)
        ("MAFIA_PROTOCOL", _bond_enumerators::ProtocolType::MAFIA_PROTOCOL)
        ("COMPACT_PROTOCOL", _bond_enumerators::ProtocolType::COMPACT_PROTOCOL)
        ("JSON_PROTOCOL", _bond_enumerators::ProtocolType::JSON_PROTOCOL)
        ("PRETTY_JSON_PROTOCOL", _bond_enumerators::ProtocolType::PRETTY_JSON_PROTOCOL)
        ("SIMPLE_PROTOCOL", _bond_enumerators::ProtocolType::SIMPLE_PROTOCOL);

const
std::map<enum ProtocolType, std::string> _value_to_name_ProtocolType = 
    bond::reverse_map(_name_to_value_ProtocolType);

} // namespace ProtocolType
} // namespace _bond_enumerators>


} // namespace bond

